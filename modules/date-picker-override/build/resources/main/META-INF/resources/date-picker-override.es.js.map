{"version":3,"sources":["../../../../../src/main/resources/META-INF/resources/date-picker-override.es.js"],"names":["Main","label","name","onChange","predefinedValue","readOnly","value","min","max","otherProps","initialValue","undefined","currentValue","setCurrentValue","_useState2","defaultMin","parseInt","defaultMax","currentDate","Date","getDate","currentMonth","getMonth","_react","_ReactFieldBase","_datePicker","date","placeholder","dateFormat","years","end","start","defaultMonth","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,QAAA,SAAA,wBAAA,QAAA,qCAAA,CAAA,CAAA;AACA,QAAA,kBAAA,QAAA,kEAAA,CAAA;AACA,QAAA,gBAAA,QAAA,4DAAA,CAAA;AACA,QAAA,cAAA,uBAAA,QAAA,0CAAA,CAAA,CAAA;AAAiD,QAAA,YAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,CAAA;AAAA,aAAA,sBAAA,CAAA,GAAA,EAAA;AAAA,aAAA,OAAA,IAAA,UAAA,GAAA,GAAA,GAAA,EAAA,WAAA,GAAA,EAAA;AAAA;AAAA,aAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,UAAA,cAAA,OAAA,OAAA,EAAA,OAAA,IAAA,CAAA,IAAA,IAAA,IAAA,OAAA,EAAA;AAAA,UAAA,IAAA,IAAA,OAAA,EAAA,CAAA,OAAA,CAAA,2BAAA,SAAA,wBAAA,CAAA,CAAA,EAAA;AAAA,eAAA,IAAA,CAAA,GAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AAAA;AAAA,aAAA,uBAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,UAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA,IAAA,SAAA,CAAA,IAAA,YAAA,QAAA,CAAA,CAAA,IAAA,cAAA,OAAA,CAAA,EAAA,OAAA,EAAA,WAAA,CAAA,EAAA,CAAA,IAAA,IAAA,yBAAA,CAAA,CAAA,CAAA,IAAA,KAAA,EAAA,GAAA,CAAA,CAAA,CAAA,EAAA,OAAA,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,EAAA,WAAA,IAAA,EAAA;AAAA,UAAA,IAAA,OAAA,cAAA,IAAA,OAAA,wBAAA,CAAA,KAAA,IAAA,CAAA,IAAA,CAAA,EAAA,IAAA,cAAA,CAAA,IAAA,GAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA;AAAA,YAAA,IAAA,IAAA,OAAA,wBAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,GAAA,IAAA,EAAA,GAAA,IAAA,OAAA,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AAAA,OAAA,OAAA,EAAA,SAAA,IAAA,CAAA,EAAA,KAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AAAA;AAAA,aAAA,QAAA,GAAA;AAAA,iBAAA,OAAA,MAAA,GAAA,OAAA,MAAA,CAAA,IAAA,EAAA,GAAA,UAAA,MAAA,EAAA;AAAA,aAAA,IAAA,IAAA,CAAA,EAAA,IAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAA,cAAA,SAAA,UAAA,CAAA,CAAA,CAAA,KAAA,IAAA,GAAA,IAAA,MAAA,EAAA;AAAA,gBAAA,OAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,MAAA,EAAA,GAAA,CAAA,EAAA;AAAA,qBAAA,GAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA;AAAA,SAAA,OAAA,MAAA;AAAA,OAAA,CAAA,OAAA,SAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAAA;AAAA,aAAA,cAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AAAA,aAAA,gBAAA,GAAA,KAAA,sBAAA,GAAA,EAAA,CAAA,CAAA,IAAA,4BAAA,GAAA,EAAA,CAAA,CAAA,IAAA,kBAAA;AAAA;AAAA,aAAA,gBAAA,GAAA;AAAA,YAAA,IAAA,SAAA,CAAA,2IAAA,CAAA;AAAA;AAAA,aAAA,2BAAA,CAAA,CAAA,EAAA,MAAA,EAAA;AAAA,UAAA,CAAA,CAAA,EAAA,OAAA,IAAA,OAAA,CAAA,KAAA,QAAA,EAAA,OAAA,kBAAA,CAAA,EAAA,MAAA,CAAA,CAAA,IAAA,IAAA,OAAA,SAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,QAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,WAAA,CAAA,IAAA,CAAA,IAAA,MAAA,KAAA,IAAA,MAAA,KAAA,EAAA,OAAA,MAAA,IAAA,CAAA,CAAA,CAAA,CAAA,IAAA,MAAA,WAAA,IAAA,2CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,OAAA,kBAAA,CAAA,EAAA,MAAA,CAAA;AAAA;AAAA,aAAA,iBAAA,CAAA,GAAA,EAAA,GAAA,EAAA;AAAA,UAAA,OAAA,IAAA,IAAA,MAAA,IAAA,MAAA,EAAA,MAAA,IAAA,MAAA,CAAA,KAAA,IAAA,IAAA,CAAA,EAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,KAAA,CAAA,IAAA,IAAA,CAAA,CAAA,CAAA,OAAA,IAAA;AAAA;AAAA,aAAA,qBAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAA,UAAA,IAAA,QAAA,CAAA,GAAA,IAAA,GAAA,eAAA,OAAA,MAAA,IAAA,EAAA,OAAA,QAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA,IAAA,QAAA,CAAA,EAAA;AAAA,YAAA,CAAA;AAAA,YAAA,CAAA;AAAA,YAAA,CAAA;AAAA,YAAA,CAAA;AAAA,YAAA,IAAA,EAAA;AAAA,YAAA,IAAA,CAAA,CAAA;AAAA,YAAA,IAAA,CAAA,CAAA,CAAA,IAAA;AAAA,cAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,MAAA,CAAA,EAAA;AAAA,gBAAA,OAAA,CAAA,MAAA,CAAA,EAAA,OAAA,IAAA,CAAA,CAAA;AAAA,WAAA,MAAA,OAAA,EAAA,IAAA,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAA,IAAA,MAAA,EAAA,IAAA,CAAA,EAAA,KAAA,GAAA,EAAA,MAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,CAAA,CAAA;AAAA,SAAA,CAAA,OAAA,CAAA,EAAA;AAAA,cAAA,CAAA,CAAA,EAAA,IAAA,CAAA;AAAA,SAAA,SAAA;AAAA,cAAA;AAAA,gBAAA,CAAA,CAAA,IAAA,QAAA,EAAA,QAAA,CAAA,KAAA,IAAA,EAAA,QAAA,GAAA,EAAA,OAAA,CAAA,MAAA,CAAA,CAAA,EAAA;AAAA,WAAA,SAAA;AAAA,gBAAA,CAAA,EAAA,MAAA,CAAA;AAAA;AAAA,SAAA,OAAA,CAAA;AAAA;AAAA;AAAA,aAAA,eAAA,CAAA,GAAA,EAAA;AAAA,UAAA,MAAA,OAAA,CAAA,GAAA,CAAA,EAAA,OAAA,GAAA;AAAA;AAAA,aAAA,wBAAA,CAAA,MAAA,EAAA,QAAA,EAAA;AAAA,UAAA,UAAA,IAAA,EAAA,OAAA,EAAA,CAAA,IAAA,SAAA,8BAAA,MAAA,EAAA,QAAA,CAAA,CAAA,IAAA,GAAA,EAAA,CAAA,CAAA,IAAA,OAAA,qBAAA,EAAA;AAAA,YAAA,mBAAA,OAAA,qBAAA,CAAA,MAAA,CAAA,CAAA,KAAA,IAAA,CAAA,EAAA,IAAA,iBAAA,MAAA,EAAA,GAAA,EAAA;AAAA,gBAAA,iBAAA,CAAA,CAAA,CAAA,IAAA,SAAA,OAAA,CAAA,GAAA,KAAA,CAAA,EAAA,SAAA,IAAA,CAAA,OAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,MAAA,EAAA,GAAA,CAAA,EAAA,SAAA,OAAA,GAAA,IAAA,OAAA,GAAA,CAAA;AAAA;AAAA,OAAA,OAAA,MAAA;AAAA;AAAA,aAAA,6BAAA,CAAA,MAAA,EAAA,QAAA,EAAA;AAAA,UAAA,UAAA,IAAA,EAAA,OAAA,EAAA,CAAA,IAAA,SAAA,EAAA,CAAA,IAAA,aAAA,OAAA,IAAA,CAAA,MAAA,CAAA,CAAA,IAAA,GAAA,EAAA,CAAA,CAAA,KAAA,IAAA,CAAA,EAAA,IAAA,WAAA,MAAA,EAAA,GAAA,EAAA;AAAA,cAAA,WAAA,CAAA,CAAA,CAAA,IAAA,SAAA,OAAA,CAAA,GAAA,KAAA,CAAA,EAAA,SAAA,OAAA,GAAA,IAAA,OAAA,GAAA,CAAA;AAAA,OAAA,OAAA,MAAA;AAAA;AAEjD,QAAMA,OAAO,SAAPA,IAAO,CAAH,IAAG,EAAwF;AAAA,UAAtFC,QAAK,KAALA,KAAsF;AAAA,UAA/EC,OAAI,KAAJA,IAA+E;AAAA,UAAzEC,YAAQ,KAARA,QAAyE;AAAA,UAA/DC,kBAAe,KAAfA,eAA+D;AAAA,UAA9CC,WAAQ,KAARA,QAA8C;AAAA,UAApCC,QAAK,KAALA,KAAoC;AAAA,UAA7BC,MAAG,KAAHA,GAA6B;AAAA,UAAxBC,MAAG,KAAHA,GAAwB;AAAA,UAAhBC,aAAU,yBAAA,IAAA,EAAA,SAAA,CAAM;AACjG;AACA,UAAMC,eAAeJ,UAAU,IAAVA,IAAkBA,UAAUK,SAA5BL,GAAwCA,KAAxCA,GAAgDF,eAArE;AACA,UAAA,YAAwC,CAAA,GAAA,OAAA,QAAA,EAASM,YAAT,CAAxC;AAAA,UAA8DI,aAAAA,eAAAA,SAAAA,EAAAA,CAAAA,CAA9D;AAAA,UAAOF,eAAY,WAAA,CAAA,CAAnB;AAAA,UAAqBC,kBAAe,WAAA,CAAA,CAApC;;AAEA;AACA,UAAME,aAAaR,QAAQ,EAARA,GAAaS,SAAST,GAATS,EAAc,EAAdA,CAAbT,GAAiC,IAApD,CANiG,CAMvC;AAC1D,UAAMU,aAAaT,QAAQ,EAARA,GAAaQ,SAASR,GAATQ,EAAc,EAAdA,CAAbR,GAAiC,IAApD,CAPiG,CAOvC;;AAE1D,UAAMU,cAAc,IAAIC,IAAJ,GAAWC,OAAX,EAApB,CATiG,CASvD;AAC1C,UAAMC,eAAe,IAAIF,IAAJ,GAAWG,QAAX,KAAwB,CAA7C;;AAGA,aAAA,cACIC,OAAAA,SAAAA,EAAAA,aAAAA,CAACC,gBAAAA,SAADD,EAAU,SAAA;AACNtB,iBAAOA,KADD;AAENC,gBAAMA,IAFA;AAGNE,2BAAiBA;AAHX,SAAA,EAIFK,UAJE,CAAVc,EAIkB,aAEdA,OAAAA,SAAAA,EAAAA,aAAAA,CAACE,YAAAA,SAAAA,CAADF,EAAe;AACXrB,gBAAMA,IADK;AAEXC,oBAAU,SAAA,QAAA,CAACuB,IAAD,EAAU;AAChBb,4BAAgBa,IAAhBb;AACAV,sBAASuB,IAATvB;AACF,WALS;AAMXwB,uBAAY,YAND;AAOXC,sBAAW;AACX;;AARW,YASXC,OAAO;AACHC,iBAAKb,UADF;AAEHc,mBAAOhB;AAFJ,WATI;AAaXT,iBAAOM,YAbI;AAcXoB,wBAtBOf,aAAa,GAAbA,GAAmBI,YAAnBJ,GAAkC,GAAlCA,GAAwCC;AAQpC,SAAfK,CANJA;AADJ;AA0BH,KAvCD;AAyCAvB,SAAKiC,WAALjC,GAAmB,oBAAnBA;AAAwC,QAAA,WAAA,QAAA,SAAA,IAEzBA,IAFyB","sourcesContent":["import React, {useState} from 'react';\nimport {FieldBase} from 'dynamic-data-mapping-form-field-type/FieldBase/ReactFieldBase.es';\nimport {useSyncValue} from 'dynamic-data-mapping-form-field-type/hooks/useSyncValue.es';\nimport ClayDatePicker from '@clayui/date-picker';\n\nconst Main = ({label, name, onChange, predefinedValue, readOnly, value, min, max, ...otherProps}) => {\n    // const [currentValue, setCurrentValue] = useSyncValue(value ? value : predefinedValue);\n    const initialValue = value !== null && value !== undefined ? value : predefinedValue;\n    const [currentValue, setCurrentValue] = useState(initialValue);\n\n    // Convert min and max to integers if they are provided as strings\n    const defaultMin = min !== '' ? parseInt(min, 10) : 1997; // Default to 1997 if min is empty\n    const defaultMax = max !== '' ? parseInt(max, 10) : 2024; // Default to 2024 if max is empty\n\n    const currentDate = new Date().getDate(); // Get the current date (1-31)\n    const currentMonth = new Date().getMonth() + 1;\n\n    const defaultVal = defaultMax + \"-\" + currentMonth + \"-\" + currentDate;\n    return (\n        <FieldBase\n            label={label}\n            name={name}\n            predefinedValue={predefinedValue}\n            {...otherProps}\n        >\n            <ClayDatePicker\n                name={name}\n                onChange={(date) => {\n                    setCurrentValue(date);\n                    onChange(date);\n                }}\n                placeholder=\"__/__/____\"\n                dateFormat=\"MM/dd/yyyy\"\n                // dateFormat={clayFormat}\n                years={{\n                    end: defaultMax,\n                    start: defaultMin\n                }}\n                value={currentValue}\n                defaultMonth={defaultVal}\n\n            />\n        </FieldBase>\n    );\n}\n\nMain.displayName = 'DatePickerOverride';\n\nexport default Main;\n"]}